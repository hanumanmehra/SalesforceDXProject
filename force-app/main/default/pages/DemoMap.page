<apex:page standardController="Store_Location__c" extensions="StoreLocationController">
	<script>
	function initMap() {
	  var map = new google.maps.Map(document.getElementById('map'), {
	    center: {lat: 26.919782, lng: 75.787896},
	    zoom: 6
	  });
	  var infoWindow = new google.maps.InfoWindow({map: map});
	
	  // Try HTML5 geolocation.
	  if (navigator.geolocation) {
	    navigator.geolocation.getCurrentPosition(function(position) {
	      var pos = {
	        lat: position.coords.latitude,
	        lng: position.coords.longitude
	      };
	
	      infoWindow.setPosition(pos);
	      infoWindow.setContent('Location found.');
	      map.setCenter(pos);
	    }, function() {
	      handleLocationError(true, infoWindow, map.getCenter());
	    });
	  } else {
	    // Browser doesn't support Geolocation
	    handleLocationError(false, infoWindow, map.getCenter());
	  }
	}
	
	function handleLocationError(browserHasGeolocation, infoWindow, pos) {
	  infoWindow.setPosition(pos);
	  infoWindow.setContent(browserHasGeolocation ?
	                        'Error: The Geolocation service failed.' :
	                        'Error: Your browser doesn\'t support geolocation.');   
	}
	
	 </script>
	 <script
	    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCzvuLNbK0HOu0-hfCWCH5C7V_Bz8TUKAY&callback=initMap">  
	</script>
	<apex:form >
 	<div id="frmId">
		 <apex:outputPanel />
 			<apex:selectlist value="{!selectDistance}" size="1" style="margin-left: 6%;" onchange="jsfunction('{!mapofNearestLocation}',alert('hi'))">    
				<apex:selectoptions value="{!Items}"/>
				<apex:actionsupport event="onchange"  action="{!distance}"  rerender="frmId"/>
			</apex:selectlist>
 	</div>
 	<div id="map" style="width:100%;height:300px"></div> 
</apex:form>
	 
</apex:page>